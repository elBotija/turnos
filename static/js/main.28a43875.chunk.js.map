{"version":3,"sources":["components/Header.js","components/AgregarCita.js","components/Cita.js","components/ListaCitas.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","AgregarCita","state","error","nombreMascotaRef","React","createRef","propietarioRef","fechaRef","horaRef","sintomasRef","crearNuevaCita","e","preventDefault","mascota","_this","current","value","propietario","fecha","hora","sintomas","setState","nuevaCita","id","uuid","crearCita","currentTarget","reset","existeError","this","onSubmit","type","ref","placeholder","Component","Cita","eliminarCita","borrarCita","info","_this$props$info","onClick","ListaCitas","citas","mensaje","Object","keys","length","map","cita","components_Cita","key","App","concat","toConsumableArray","console","log","filter","citasLS","localStorage","getItem","JSON","parse","setItem","stringify","components_Header","components_AgregarCita","components_ListaCitas","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28a43875.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = (props) => {\n    return(\n        <header>\n            <h1 className=\"text-center\">{props.title}</h1>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport uuid from 'uuid'\nimport PropTypes from 'prop-types'\n\nclass AgregarCita extends Component{\n\n    state = {\n        error: false\n    }\n\n    // ref\n    nombreMascotaRef = React.createRef()\n    propietarioRef = React.createRef()\n    fechaRef = React.createRef()\n    horaRef = React.createRef()\n    sintomasRef = React.createRef()\n\n    crearNuevaCita = (e) => {\n        e.preventDefault()\n\n        const mascota =  this.nombreMascotaRef.current.value,\n              propietario = this.propietarioRef.current.value,\n              fecha = this.fechaRef.current.value,\n              hora = this.horaRef.current.value,\n              sintomas = this.sintomasRef.current.value\n\n        if( mascota === '' || propietario === '' || fecha === '' || hora === '' || sintomas === ''){\n            this.setState({\n                error: true\n            })\n        }else{\n            const nuevaCita ={\n                id: uuid(),\n                mascota,\n                propietario,\n                fecha,\n                hora,\n                sintomas\n            }\n\n            //se envia el objeto al padre\n            this.props.crearCita(nuevaCita)\n\n            //reiniciar formulario\n            e.currentTarget.reset()\n\n            this.setState({\n                error: false\n            })\n        }\n\n    }\n\n    render(){\n        const existeError = this.state.error\n        return(\n            <div className='card mt-5'>\n                <div className='card-body'>\n                    <h2 className='card-title text-center mb-5'>\n                        Agrega las citas aquí\n                    </h2>\n                    <form onSubmit={this.crearNuevaCita}>\n                      <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-3 col-form-label\">Nombre Mascota</label>\n                        <div className=\"col-sm-8 col-lg-9\">\n                            <input type=\"text\" ref={this.nombreMascotaRef} className=\"form-control\" placeholder=\"Nombre Mascota\" />\n                        </div>\n                      </div>\n                      <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-3 col-form-label\">Nombre Dueño</label>\n                            <div className=\"col-sm-8 col-lg-9\">\n                                <input type=\"text\" ref={this.propietarioRef} className=\"form-control\"  placeholder=\"Nombre Dueño de la Mascota\" />\n                            </div>\n                      </div>\n\n                       <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-3 col-form-label\">Fecha</label>\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                                <input type=\"date\" ref={this.fechaRef} className=\"form-control\" />\n                            </div>\n\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\n                            <div className=\"col-sm-8 col-lg-3\">\n                                <input type=\"time\" ref={this.horaRef} className=\"form-control\" />\n                            </div>\n                      </div>\n\n                      <div className=\"form-group row\">\n                            <label className=\"col-sm-4 col-lg-3 col-form-label\">Sintomas</label>\n                            <div className=\"col-sm-8 col-lg-9\">\n                                <textarea ref={this.sintomasRef} className=\"form-control\"></textarea>\n                            </div>\n                      </div>\n                      <div className=\"form-group row justify-content-end\">\n                            <div className=\"col-sm-3\">\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\n                            </div>\n                      </div>\n                  </form>\n                  { existeError ? <div className='alert alert-danger text-center'>Todos los campos son obligatorios</div> : '' }\n                </div>\n            </div>\n        )\n    }\n}\n\nAgregarCita.propTypes = {\n    crearCita: PropTypes.func.isRequired\n}\n\nexport default AgregarCita\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Cita extends Component{\n\n    eliminarCita = (e) => {\n        // console.log(this.props.info.id)\n        this.props.borrarCita(this.props.info.id)\n    }\n\n    render(){\n        const { mascota, propietario, fecha, hora, sintomas, id } = this.props.info\n        return(\n            <div className='media mt-3'>\n                <div className='media-body'>\n                    <h3 className='mt-0'>{mascota}</h3>\n                    <p className='card-text'><span>Nombre del Dueño: {propietario}</span></p>\n                    <p className='card-text'><span>Fecha:</span> {fecha}</p>\n                    <p className='card-text'><span>Hora:</span> {hora}</p>\n                    <p className='card-text'><span>Sintoma:</span></p>\n                    <p className='card-text'>{sintomas}</p>\n                    <button onClick={ this.eliminarCita } className='btn btn-danger'>Borrar &times;</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nCita.propTypes = {\n    info: PropTypes.shape({\n        fecha: PropTypes.string.isRequired,\n        hora: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        mascota: PropTypes.string.isRequired,\n        propietario: PropTypes.string.isRequired,\n        sintomas: PropTypes.string.isRequired\n    }),\n    borrarCita: PropTypes.func.isRequired\n}\n\nexport default Cita\n","import React, { Component } from 'react'\nimport Cita from './Cita'\nimport PropTypes from 'prop-types'\n\nclass ListaCitas extends Component {\n    render(){\n        const citas = this.props.citas\n\n        const mensaje = Object.keys(citas).length === 0 ? 'No hay Citas' : 'Administra tus Citas'\n        return(\n            <div className='card mt-5'>\n                <div className='card-body'>\n                    <h2 className='card-title text-center'> {mensaje} </h2>\n                    <div className='lista-citas'>\n                        {Object.keys(citas).map(cita => (\n                            <Cita\n                                key={cita}\n                                info={citas[cita]}\n                                borrarCita={this.props.borrarCita}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nListaCitas.propTypes = {\n    citas: PropTypes.array.isRequired,\n    borrarCita: PropTypes.func.isRequired\n}\n\nexport default ListaCitas\n","import React, { Component } from 'react';\nimport Header from './components/Header'\nimport AgregarCita from './components/AgregarCita'\nimport ListaCitas from './components/ListaCitas'\n\nclass App extends Component {\n\n    state = {\n        citas:[]\n    }\n\n    componentDidMount(){\n        console.log('esta listo')\n        const citasLS = localStorage.getItem('citas')\n        if(citasLS){\n            this.setState({\n                citas: JSON.parse(citasLS)\n            })\n        }\n    }\n\n    componentDidUpdate(){\n        console.log('cambio')\n        localStorage.setItem(\n            'citas',\n            JSON.stringify(this.state.citas)\n        )\n    }\n\n    crearCita = (nuevaCita) => {\n        const citas = [...this.state.citas, nuevaCita]\n\n        console.log(citas)\n\n        this.setState({\n            citas\n        })\n    }\n\n    borrarCita = (id) => {\n        // Obtener Copia del State\n        const citasActuales = [...this.state.citas]\n\n        // borrar elemento del State\n        const citas = citasActuales.filter(cita => cita.id !== id)\n\n        // actualizar el state\n        this.setState({\n            citas\n        })\n    }\n\n  render() {\n    return (\n        <div className=\"container\">\n            <Header\n                title=\"Administrador Turnos Veterinaria\"\n            />\n            <div className='row'>\n                <div className='col col-md-6'>\n                    <AgregarCita\n                        crearCita={this.crearCita}\n                    />\n                </div>\n                <div className='col col-md-6'>\n                    <ListaCitas\n                        citas={this.state.citas}\n                        borrarCita={this.borrarCita}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}